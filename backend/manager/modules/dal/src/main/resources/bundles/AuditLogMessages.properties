VM_CLEARED=Unused
SYSTEM_MASTER_DOMAIN_NOT_IN_SYNC=Sync Error on Master Domain between Host ${VdsName} and oVirt Engine. Domain: ${StorageDomainName} is marked as Master in oVirt Engine database but not on the Storage side. Please consult with Support on how to fix this issue.
IRS_DISK_SPACE_LOW=Warning, Low disk space.${StorageDomainName} domain has ${DiskSpace} GB of free space
IRS_DISK_SPACE_LOW_ERROR=Critical, Low disk space. ${StorageDomainName} domain has ${DiskSpace} GB of free space
VDS_LOW_DISK_SPACE=Warning, Low disk space. Host ${VdsName} has less than ${DiskSpace} MB of free space left on: ${Disks}.
VDS_LOW_DISK_SPACE_ERROR=Critical, Low disk space. Host ${VdsName} has less than ${DiskSpace} MB of free space left on: ${Disks}.
IRS_FAILURE=Failed to access Storage on Host ${VdsName}.
USER_ADD=User '${NewUserName}' was added successfully to the system.
USER_FAILED_ADD_ADUSER=Failed to add User '${NewUserName}' to the system. 
USER_ADD_BOOKMARK=Bookmark ${BookmarkName} was added by ${UserName}.
USER_ADD_BOOKMARK_FAILED=Failed to add bookmark: ${BookmarkName} (User: ${UserName}).
USER_ADD_VDS=Host ${VdsName} was added by ${UserName}.
USER_ADD_VM=VM ${VmName} was created by ${UserName}.
USER_ADD_VM_STARTED=VM ${VmName} creation was initiated by ${UserName}.
USER_ADD_VM_FINISHED_SUCCESS=VM ${VmName} creation has been completed.
USER_ADD_VM_FINISHED_FAILURE=Failed to complete VM ${VmName} creation.
USER_ADD_VM_POOL=VM Pool ${VmPoolName} was created by ${UserName}.
USER_ADD_VM_POOL_FAILED=Failed to create VM Pool ${VmPoolName} (User: ${UserName}).
USER_ADD_VM_POOL_WITH_VMS=VM Pool ${VmPoolName} (containing ${VmsCount} VMs) was created by ${UserName}.
USER_ADD_VM_POOL_WITH_VMS_FAILED=Failed to create VM Pool ${VmPoolName}(User: ${UserName}). 
USER_ADD_VM_POOL_WITH_VMS_ADD_VDS_FAILED=Pool ${VmPoolName} Created, but some Vms failed to create (User: ${UserName}). 
USER_ADD_VM_TEMPLATE=Creation of Template ${VmTemplateName} from VM ${VmName} was initiated by ${UserName}.
USER_ADD_VM_TEMPLATE_FINISHED_SUCCESS=Creation of Template ${VmTemplateName} from VM ${VmName} has been completed.
USER_ADD_VM_TEMPLATE_FINISHED_FAILURE=Failed to complete creation of Template ${VmTemplateName} from VM ${VmName}.
USER_ADD_VM_TO_POOL=VM ${VmName} was added to VM Pool ${VmPoolName} by ${UserName}.
USER_ADD_VM_TO_POOL_FAILED=Failed to add VM ${VmName} to VM Pool ${VmPoolName}(User: ${UserName}).
USER_ATTACH_USER_TO_POOL=User ${AdUserName} was attached to VM Pool ${VmPoolName} by ${UserName}.
USER_ATTACH_USER_TO_POOL_INTERNAL=User ${AdUserName} was attached to VM Pool ${VmPoolName}.
USER_ATTACH_USER_TO_POOL_FAILED=Failed to attach User ${AdUserName} to VM Pool ${VmPoolName} (User: ${UserName}).
USER_ATTACH_USER_TO_POOL_FAILED_INTERNAL=Failed to attach User ${AdUserName} to VM Pool ${VmPoolName} (User: ${UserName}).
USER_ATTACH_USER_TO_VM_FROM_POOL=User ${AdUserName} attach to VM ${VmName} in VM Pool ${VmPoolName} was initiated by ${UserName}.
USER_ATTACH_USER_TO_VM_FROM_POOL_FINISHED_SUCCESS=User ${AdUserName} attach to VM ${VmName} in VM Pool ${VmPoolName} has been completed.
USER_ATTACH_USER_TO_VM_FROM_POOL_FINISHED_FAILURE=Failed to complete user ${AdUserName} attach to VM ${VmName} in VM Pool ${VmPoolName}.
USER_ATTACH_USER_TO_VM_FROM_POOL_FAILED=Failed to attach User ${AdUserName} to VM from VM Pool ${VmPoolName} (User: ${UserName}).
USER_ATTACH_USER_TO_VM=User ${AdUserName} was attached to VM ${VmName} by ${UserName}.
USER_CHANGE_DISK_VM=CD ${DiskName} was inserted to VM ${VmName} by ${UserName}
USER_EJECT_VM_DISK=CD was ejected from VM ${VmName} by ${UserName}
USER_CREATE_SNAPSHOT=Snapshot ${SnapshotName} creation for VM ${VmName} was initiated by ${UserName}.
USER_CREATE_SNAPSHOT_FINISHED_SUCCESS=Snapshot ${SnapshotName} creation for VM ${VmName} has been completed.
USER_CREATE_SNAPSHOT_FINISHED_FAILURE=Failed to complete Snapshot ${SnapshotName} creation for VM ${VmName}.
USER_MERGE_SNAPSHOT=Snapshot ${SnapshotName} deletion on VM ${VmName} was initiated by ${UserName}.
USER_MERGE_SNAPSHOT_FINISHED_SUCCESS=Snapshot ${SnapshotName} deletion on VM ${VmName} has been completed.
USER_MERGE_SNAPSHOT_FINISHED_FAILURE=Failed to complete Snapshot ${SnapshotName} deletion on VM ${VmName}.
USER_DETACH_USER_FROM_POOL=User ${AdUserName} was detached from VM Pool ${VmPoolName} by ${UserName}.
USER_DETACH_USER_FROM_POOL_FAILED=Failed to detach User ${AdUserName} from VM Pool ${VmPoolName} (User: ${UserName}).
USER_DETACH_USER_FROM_VM=User ${AdUserName} was detached from VM ${VmName} by ${UserName}.
USER_FAILED_DETACH_USER_FROM_VM=Failed to detach User ${AdUserName} from VM ${VmName} (User: ${UserName}).
USER_FAILED_ADD_VDS=Failed to add Host ${VdsName} (User: ${UserName}).
USER_FAILED_ADD_VM=Failed to create VM ${VmName} (User: ${UserName}).
USER_FAILED_ADD_VM_TEMPLATE=Failed to initiate creation of Template ${VmTemplateName} from VM ${VmName} (User: ${UserName}).
USER_FAILED_ATTACH_USER_TO_VM=Failed to attach User ${AdUserName} to VM ${VmName} (User: ${UserName}).
USER_FAILED_CHANGE_DISK_VM=Failed to change disk in VM ${VmName} (Host: ${VdsName}, User: ${UserName}).
USER_FAILED_CREATE_SNAPSHOT=Failed to create Snapshot ${SnapshotName} for VM ${VmName} (User: ${UserName}).
USER_FAILED_MERGE_SNAPSHOT=Failed to merge Snapshot ${SnapshotName} for VM ${VmName} (User: ${UserName}).
USER_FAILED_PAUSE_VM=Failed to suspend VM ${VmName} (Host: ${VdsName}, User: ${UserName}).
USER_FAILED_REMOVE_VDS=Failed to remove Host ${VdsName} (User: ${UserName}).
USER_FAILED_REMOVE_VM=Failed to remove VM ${VmName} (User: ${UserName}).
USER_FAILED_REMOVE_VM_TEMPLATE=Failed to initiate removal of Template ${VmTemplateName} (User: ${UserName}).
USER_FAILED_RESTORE_FROM_SNAPSHOT=Failed to restore VM ${VmName} from Snapshot (User: ${UserName}).
USER_FAILED_RESUME_VM=Failed to resume VM ${VmName} (Host: ${VdsName}, User: ${UserName}).
USER_FAILED_RUN_VM=Failed to run VM ${VmName} (User: ${UserName}).
USER_RUN_VM_AS_STATELESS_FINISHED_FAILURE=Failed to complete starting of VM ${VmName}.
USER_RUN_VM_FAILURE_STATELESS_SNAPSHOT_LEFT=Failed to start VM ${VmName}, because exist snapshot for stateless state. Snapshot will be deleted. 
USER_FAILED_STOP_VM=Failed to stop VM ${VmName} (Host: ${VdsName}, User: ${UserName}).
USER_INITIATED_SHUTDOWN_VM=VM shutdown initiated by ${UserName} on VM ${VmName} (Host: ${VdsName}).
USER_FAILED_SHUTDOWN_VM=Failed to initiate shutdown on VM ${VmName} (Host: ${VdsName}, User: ${UserName}).
USER_STOPPED_VM_INSTEAD_OF_SHUTDOWN=VM ${VmName} was stopped ungracefully by ${UserName} (Host: ${VdsName}).
USER_FAILED_STOPPING_VM_INSTEAD_OF_SHUTDOWN=Failed to stop VM ${VmName} (Host: ${VdsName}, User: ${UserName}).
USER_ADD_DISK_TO_VM=Add-Disk operation of ${DiskName} was initiated on VM ${VmName} by ${UserName}.
USER_ADD_DISK_TO_VM_FINISHED_SUCCESS=${DiskName} was successfully added to VM ${VmName}.
USER_ADD_DISK_TO_VM_FINISHED_FAILURE=Operation Add-Disk failed to complete on VM ${VmName}.
USER_FAILED_ADD_DISK_TO_VM=Operation Add-Disk failed on VM ${VmName} (User: ${UserName}).
USER_REMOVE_DISK_FROM_VM=Disk was removed from VM ${VmName} by ${UserName}.
USER_FAILED_REMOVE_DISK_FROM_VM=Failed to remove Disk from VM ${VmName} (User: ${UserName}).
USER_UPDATE_VM_DISK=VM ${VmName} disk was updated by ${UserName}.
USER_FAILED_UPDATE_VM_DISK=Failed to update VM ${VmName} Disk (User: ${UserName}).
USER_MOVED_VM=VM ${VmName} moving to Domain ${StorageDomainName} was initiated by ${UserName}.
USER_MOVED_VM_FINISHED_SUCCESS=Moving VM ${VmName} to Domain ${StorageDomainName} has been completed.
USER_MOVED_VM_FINISHED_FAILURE=Failed to complete moving of VM ${VmName} to Domain ${StorageDomainName}.
USER_FAILED_MOVE_VM=Failed to initiate moving of VM ${VmName} to Domain ${StorageDomainName} (User: ${UserName}).
USER_MOVED_TEMPLATE=Template ${VmTemplateName} moving to Domain ${StorageDomainName} was initiated by ${UserName}.
USER_MOVED_TEMPLATE_FINISHED_SUCCESS=Template ${VmTemplateName} moving to Domain ${StorageDomainName} has been completed.
USER_MOVED_TEMPLATE_FINISHED_FAILURE=Failed to complete moving of Template ${VmTemplateName} to Domain ${StorageDomainName}.
USER_FAILED_MOVE_TEMPLATE=Failed to initiate moving Template ${VmTemplateName} to Domain ${StorageDomainName} (User: ${UserName}).
USER_COPIED_TEMPLATE=Template ${VmTemplateName} copy to Domain ${StorageDomainName} was initiated by ${UserName}.
USER_COPIED_TEMPLATE_FINISHED_SUCCESS=Template ${VmTemplateName} copy to Domain ${StorageDomainName} has been completed.
USER_COPIED_TEMPLATE_FINISHED_FAILURE=Failed to complete copy of Template ${VmTemplateName} to Domain ${StorageDomainName}.
USER_FAILED_COPY_TEMPLATE=Failed to initiate copy of Template ${VmTemplateName} to Domain ${StorageDomainName} (User: ${UserName}).
USER_FAILED_TRY_BACK_TO_SNAPSHOT=Failed to preview Snapshot for VM ${VmName} (User: ${UserName}).
USER_FAILED_UPDATE_VDS=Failed to update Host ${VdsName} (User: ${UserName}).
USER_FAILED_UPDATE_VM=Failed to update VM ${VmName} (User: ${UserName}).
USER_FAILED_UPDATE_VM_TEMPLATE=Failed to update Template ${VmTemplateName} (User: ${UserName}).
USER_FAILED_VDS_RESTART=Failed to restart Host ${VdsName}, (User: ${UserName}).
USER_FAILED_VDS_START=Failed to start Host ${VdsName}, (User: ${UserName}).
USER_FAILED_VDS_STOP=Failed to stop Host ${VdsName}, (User: ${UserName}).
USER_PAUSE_VM=VM ${VmName} was suspended by ${UserName} (Host: ${VdsName}).
USER_REMOVE_BOOKMARK=Bookmark ${BookmarkName} was removed by ${UserName}.
USER_REMOVE_BOOKMARK_FAILED=Failed to remove bookmark ${BookmarkName} (User: ${UserName})
USER_REMOVE_VDS=Host ${VdsName} was removed by ${UserName}.
USER_REMOVE_VM=Removal of VM ${VmName} was initiated by ${UserName}.
USER_REMOVE_VM_FINISHED=VM ${VmName} was successfully removed.
USER_REMOVE_VM_FROM_POOL=VM ${VmName} was removed from VM Pool ${VmPoolName} by ${UserName}.
USER_REMOVE_VM_FROM_POOL_FAILED=Failed to remove VM ${VmName} from VM Pool ${VmPoolName} (User: ${UserName}).
USER_REMOVE_VM_POOL=VM Pool ${VmPoolName} was removed by ${UserName}.
USER_REMOVE_VM_POOL_FAILED=Failed to remove VM Pool ${VmPoolName} (User: ${UserName}).
USER_REMOVE_VM_TEMPLATE=Removal of Template ${VmTemplateName} was initiated by ${UserName}.
USER_REMOVE_VM_TEMPLATE_FINISHED=Removal of Template ${VmTemplateName} has been completed.
USER_RESTORE_FROM_SNAPSHOT=VM ${VmName} restored from Snapshot by ${UserName}.
USER_RESTORE_FROM_SNAPSHOT_START=Restoring VM ${VmName} from snapshot started by user ${UserName}.
USER_RESTORE_FROM_SNAPSHOT_FINISH_SUCCESS=VM ${VmName} restoring from Snapshot has been completed.
USER_RESTORE_FROM_SNAPSHOT_FINISH_FAILURE=Failed to complete restoring from Snapshot of VM ${VmName}.
USER_RESUME_VM=VM ${VmName} was resumed by ${UserName} (Host: ${VdsName}).
USER_RUN_VM=VM ${VmName} started on Host ${VdsName}
USER_RUN_VM_ON_NON_DEFAULT_VDS=Guest ${VmName} started on Host ${VdsName}. (Default Host parameter was ignored - assigned Host was down).
USER_STOP_VM=VM ${VmName} stopped by ${UserName} (Host: ${VdsName}).
USER_STOP_SUSPENDED_VM=Suspended VM ${VmName} stopped by ${UserName}.
USER_STOP_SUSPENDED_VM_FAILED=Failed to stop suspended VM ${VmName} (User: ${UserName}).
USER_TRY_BACK_TO_SNAPSHOT=Snapshot-Preview for VM ${VmName} was initiated by ${UserName}.
USER_TRY_BACK_TO_SNAPSHOT_FINISH_SUCCESS=Snapshot-Preview for VM ${VmName} has been completed.
USER_TRY_BACK_TO_SNAPSHOT_FINISH_FAILURE=Failed to complete Snapshot-Preview for VM ${VmName}.
USER_UPDATE_BOOKMARK=Bookmark ${BookmarkName} was updated by ${UserName}.
USER_UPDATE_BOOKMARK_FAILED=Failed to update bookmark: ${BookmarkName} (User: ${UserName})

USER_UPDATE_VDS=Host ${VdsName} parameters were updated by ${UserName}.
USER_UPDATE_VM=VM ${VmName} parameters were updated by ${UserName}.
USER_UPDATE_VM_CLUSTER_DEFAULT_HOST_CLEARED=${VmName} cluster was updated by ${UserName}, Default host was reset to auto assign.
USER_UPDATE_VM_POOL=VM Pool ${VmPoolName} parameters were updated by ${UserName}.
USER_UPDATE_VM_POOL_FAILED=Failed to update VM Pool ${VmPoolName} parameters (User: ${UserName}).
USER_UPDATE_VM_TEMPLATE=Template ${VmTemplateName} parameters were updated by ${UserName}.
USER_VDC_LOGIN=User ${UserName} logged in.
USER_VDC_LOGIN_FAILED=User ${UserName} failed to log in.
USER_VDC_LOGOUT=User ${UserName} logged out.
USER_VDC_LOGOUT_FAILED=Failed to log User ${UserName} out.
USER_VDS_RESTART=Host ${VdsName} was restarted by ${UserName}.
USER_VDS_START=Host ${VdsName} was started by ${UserName}.
USER_VDS_STOP=Host ${VdsName} was stopped by ${UserName}.
VDS_ALREADY_IN_REQUESTED_STATUS=Host ${HostName} is already ${AgentStatus}, Power Management ${Operation} operation skipped.
VDS_MANUAL_FENCE_STATUS=Manual fencing for host ${VdsName} was started.
VDS_MANUAL_FENCE_STATUS_FAILED=Manual fencing for host ${VdsName} failed.
VDS_MANUAL_FENCE_FAILED_CALL_FENCE_SPM=Manual fence did not revoke the selected SPM (${VdsName}) since the master storage domain\n was not active or could not use another host for the fencing operation.
VDC_START=Starting oVirt Engine.
VDC_STOP=Stopping oVirt Engine.
VDS_ACTIVATE=Host ${VdsName} was activated by ${UserName}.
VDS_ACTIVATE_FAILED=Failed to activate Host ${VdsName}.(User: ${UserName}).
VDS_DETECTED=Detected new Host ${VdsName}. Host state was set to ${VdsStatus}.
VDS_FAILURE=Host ${VdsName} is non-responsive.
VDS_MAINTENANCE=Host ${VdsName} was switched to Maintenance Mode.
VDS_MAINTENANCE_FAILED=Failed to switch Host ${VdsName} to Maintenance mode.
VDS_RECOVER=Host ${VdsName} is rebooting.
VDS_RECOVER_FAILED=Host ${VdsName} failed to recover.
VDS_RECOVER_FAILED_VMS_UNKNOWN=Host ${VdsName} cannot be reached, VMs state on this host are marked as Unknown.
VM_DOWN=VM ${VmName} is down. Exit message: ${ExitMessage}
USER_SUSPEND_VM_OK=VM ${VmName} on Host ${VdsName} was suspended.
VM_FAILURE=VM ${VmName} cannot be found on Host ${VdsName}.
VM_MIGRATION_ABORT=Migration of VM ${VmName} from Host ${VdsName} failed. Error: ${MigrationError}
VM_MIGRATION_DONE=Migration complete (VM: ${VmName}, Source Host: ${VdsName}).
VM_MIGRATION_FAILED=Migration failed${DueToMigrationError} (VM: ${VmName}, Source Host: ${VdsName}).
VM_MIGRATION_FAILED_DURING_MOVE_TO_MAINTANANCE=VM migration failed${DueToMigrationError} while Host is in 'preparing for maintenance' state.\n  Consider manual intervention: stopping/migrating Vms as Host's state will not\n  turn to maintenance while VMs are still running on it.(VM: ${VmName}, Source Host: ${VdsName}).
VM_SET_TO_UNKNOWN_STATUS=VM ${VmName} was set to the Unknown status.
VM_MIGRATION_FAILED_FROM_TO=Migration Failed${DueToMigrationError}. (VM: ${VmName}, Source Host: ${VdsName}, Destination Host:${VdsToName} ).
VM_MIGRATION_START=Starting migration of VM ${VmName} from Host ${VdsName} to Host ${VdsDestination} (User: ${UserName}.).
VM_MIGRATION_TRYING_RERUN=Migration failed${DueToMigrationError} (VM: ${VmName}, Source Host: ${VdsName}). Trying to migrate to another Host.
VM_CANCEL_MIGRATION=Migration cancelled for VM: ${VmName}
VM_CANCEL_MIGRATION_FAILED=Failed to cancel migration for VM: ${VmName}
VDS_SLOW_STORAGE_RESPONSE_TIME=Slow storage response time on Host ${VdsName}.
IRS_HOSTED_ON_VDS=Storage Pool Manager runs on Host ${VdsName} (Address: ${ServerIp}).
USER_ATTACH_VM_POOL_TO_AD_GROUP=Group ${AdGroupName} was attached to VM Pool ${VmPoolName} by ${UserName}.
USER_ATTACH_VM_POOL_TO_AD_GROUP_INTERNAL=Group ${AdGroupName} was attached to VM Pool ${VmPoolName}.
USER_ATTACH_VM_POOL_TO_AD_GROUP_FAILED=Failed to attach Group ${AdGroupName} to VM Pool ${VmPoolName} (User: ${UserName}).
USER_ATTACH_VM_POOL_TO_AD_GROUP_FAILED_INTERNAL=Failed to attach Group ${AdGroupName} to VM Pool ${VmPoolName}.
USER_ATTACH_VM_TO_AD_GROUP=Group ${AdGroupName} was attached to VM ${VmName} by ${UserName}.
USER_ATTACH_VM_TO_AD_GROUP_FAILED=Failed to attach Group ${AdGroupName} to VM ${VmName} (User: ${UserName}).
USER_DETACH_VM_POOL_TO_AD_GROUP=Group ${AdGroupName} was detached from VM Pool ${VmPoolName} by ${UserName}.
USER_DETACH_VM_POOL_TO_AD_GROUP_FAILED=Failed to detach Group ${AdGroupName} from VM Pool ${VmPoolName} (User: ${UserName}).
USER_DETACH_VM_TO_AD_GROUP=Group ${AdGroupName} was detached from VM ${VmName} by ${UserName}.
USER_DETACH_VM_TO_AD_GROUP_FAILED=Failed to detach Group ${AdGroupName} from VM ${VmName} (User: ${UserName}).
USER_REMOVE_AD_GROUP=Group ${AdGroupName} was removed by ${UserName}.
USER_REMOVE_AD_GROUP_FAILED=Failed to remove group ${AdGroupName} (User: ${UserName}).
USER_FAILED_REMOVE_ADUSER=Failed to remove User ${AdUserName} (User: ${UserName}).
USER_REMOVE_ADUSER=User ${AdUserName} was removed by ${UserName}.
USER_INITIATED_RUN_VM=Starting VM ${VmName} was initiated by ${UserName}.
USER_STARTED_VM=VM ${VmName} was started by ${UserName} (Host: ${VdsName}).
USER_INITIATED_RUN_VM_FAILED=Failed to run VM ${VmName} on Host ${VdsName}.
VDS_FAILED_TO_RUN_VMS=Host ${VdsName} will be switched to Error status for ${Time} minutes because it failed to run a VM.
USER_ADD_TAG=New Tag ${TagName} was created by ${UserName}.
USER_ADD_TAG_FAILED=Failed to create Tag named ${TagName} (User: ${UserName}).
USER_REMOVE_TAG=Tag ${TagName} was removed by ${UserName}.
USER_REMOVE_TAG_FAILED=Failed to remove Tag ${TagName} (User: ${UserName}).
USER_UPDATE_TAG=Tag ${TagName} parameters were updated by ${UserName}.
USER_UPDATE_TAG_FAILED=Failed to update Tag ${TagName} (User: ${UserName}).
USER_MOVE_TAG=Tag ${TagName} was moved from ${OldParnetTagName} to ${NewParentTagName} by ${UserName}.
USER_MOVE_TAG_FAILED=Failed to move Tag ${TagName} from ${OldParnetTagName} to ${NewParentTagName} (User: ${UserName}).
USER_ATTACH_TAG_TO_USER_GROUP=Tag ${TagName} was attached to Group(s) ${AttachGroupsNames} by ${UserName}.
USER_ATTACH_TAG_TO_USER_GROUP_FAILED=Failed to attach Group(s) ${AttachGroupsNames} to Tag ${TagName} (User: ${UserName}).
USER_ATTACH_TAG_TO_USER=Tag ${TagName} was attached to User(s) ${AttachUsersNames} by ${UserName}.
USER_ATTACH_TAG_TO_USER_FAILED=Failed to attach Tag ${TagName} to User(s) ${AttachUsersNames} (User: ${UserName}).
USER_ATTACH_TAG_TO_VDS=Tag ${TagName} was attached to Host(s) ${VdsNames} by ${UserName}.
USER_ATTACH_TAG_TO_VDS_FAILED=Failed to attach Tag ${TagName} to Host(s) ${VdsNames} (User: ${UserName}).
USER_ATTACH_TAG_TO_VM=Tag ${TagName} was attached to VM(s) ${VmsNames} by ${UserName}.
USER_ATTACH_TAG_TO_VM_FAILED=Failed to attach Tag ${TagName} to VM(s) ${VmsNames} (User: ${UserName}).
USER_DETACH_USER_GROUP_FROM_TAG=Tag ${TagName} was detached from Group(s) ${DetachGroupsNames} by ${UserName}.
USER_DETACH_USER_GROUP_FROM_TAG_FAILED=Failed to detach Tag ${TagName} from Group(s)  ${DetachGroupsNames} (User: ${UserName}).
USER_DETACH_USER_FROM_TAG=Tag ${TagName} detached from User(s) ${DetachUsersNames} by ${UserName}.
USER_DETACH_USER_FROM_TAG_FAILED=Failed to detach Tag ${TagName} from User(s) ${DetachUsersNames} (User: ${UserName}).
USER_DETACH_VDS_FROM_TAG=Tag ${TagName} was detached from Host(s) ${VdsNames} by ${UserName}.
USER_DETACH_VDS_FROM_TAG_FAILED=Failed to detach Tag ${TagName} from Host(s) ${VdsNames} (User: ${UserName}).
USER_DETACH_VM_FROM_TAG=Tag ${TagName} was detached from VM(s) ${VmsNames} by ${UserName}.
USER_DETACH_VM_FROM_TAG_FAILED=Failed to detach Tag ${TagName} from VM(s) ${VmsNames} (User: ${UserName}).
USER_ATTACH_TAG_TO_USER_EXISTS=Tag ${TagName} already attached to User(s) ${AttachUsersNamesExists}.
USER_ATTACH_TAG_TO_USER_GROUP_EXISTS=Tag ${TagName} already attached to Group(s) ${AttachGroupsNamesExists}.
USER_ATTACH_TAG_TO_VDS_EXISTS=Tag ${TagName} already attached to Host(s) ${VdsNamesExists}.
USER_ATTACH_TAG_TO_VM_EXISTS=Tag ${TagName} already attached to VM(s) ${VmsNamesExists}.
USER_ATTACH_AD_GROUP_TO_TIME_LEASED_POOL=Group ${AdGroupName} was attached to Time based VM Pool ${VmPoolName} by ${UserName}.
USER_ATTACH_AD_GROUP_TO_TIME_LEASED_POOL_FAILED=Failed to attach Group ${AdGroupName} to Time based VM Pool ${VmPoolName} (User: ${UserName}).
USER_ATTACH_USER_TO_TIME_LEASED_POOL=User ${AdUserName} was attached to Time based VM Pool ${VmPoolName} by ${UserName}.
USER_ATTACH_USER_TO_TIME_LEASED_POOL_FAILED=Failed to attach User ${AdUserName} to Time based VM Pool ${VmPoolName} (User: ${UserName}).
USER_DETACH_AD_GROUP_FROM_TIME_LEASED_POOL=Group ${AdGroupName} was detached from Time based VM Pool ${VmPoolName} by ${UserName}.
USER_DETACH_AD_GROUP_FROM_TIME_LEASED_POOL_INTERNAL=Group ${AdGroupName} was detached from expired Time based VM Pool ${VmPoolName}.
USER_DETACH_AD_GROUP_FROM_TIME_LEASED_POOL_FAILED=Failed to detach Group ${AdGroupName} from Time based VM Pool ${VmPoolName} (User: ${UserName}).
USER_DETACH_AD_GROUP_FROM_TIME_LEASED_POOL_FAILED_INTERNAL=Failed to detach Group ${AdGroupName} from expired Time based VM Pool ${VmPoolName}.
USER_DETACH_USER_FROM_TIME_LEASED_POOL=User ${AdUserName} was detached from Time based VM Pool ${VmPoolName} by ${UserName}.
USER_DETACH_USER_FROM_TIME_LEASED_POOL_INTERNAL=User ${AdUserName} was detached from expired Time based VM Pool ${VmPoolName}.
USER_DETACH_USER_FROM_TIME_LEASED_POOL_FAILED=Failed to detach User ${AdUserName} from Time base VM Pool ${VmPoolName} (User: ${UserName}).
USER_DETACH_USER_FROM_TIME_LEASED_POOL_FAILED_INTERNAL=Failed to detach User ${AdUserName} from expired Time base VM Pool ${VmPoolName}. 
USER_UPDATE_AD_GROUP_TO_TIME_LEASED_POOL=Time parameters for Group ${AdGroupName} were changed on VM Pool ${VmPoolName} by ${UserName}.
USER_UPDATE_AD_GROUP_TO_TIME_LEASED_POOL_FAILED=Failed to update Time parameters for Group ${AdGroupName} on VM Pool ${VmPoolName} (User: ${UserName}).
USER_UPDATE_USER_TO_TIME_LEASED_POOL=Time parameters for User ${AdUserName} were changed on VM Pool ${VmPoolName} by ${UserName}.
USER_UPDATE_USER_TO_TIME_LEASED_POOL_FAILED=Failed to update Time parameters for User ${AdUserName} on VM Pool ${VmPoolName} (User: ${UserName}).
USER_LOCKED_VM=User ${GuestUser} locked VM ${VmName}.
USER_LOGGED_IN_VM=User ${GuestUser} logged in to VM ${VmName}.
USER_LOGGED_OUT_VM=User ${GuestUser} logged out from VM ${VmName}.
USER_UNLOCKED_VM=User ${GuestUser} unlocked VM ${VmName}.
USER_SUSPEND_VM=Suspending VM ${VmName} was initiated by User ${UserName} (Host: ${VdsName}).
USER_SUSPEND_VM_FINISH_SUCCESS=Suspending VM ${VmName} has been completed.
USER_SUSPEND_VM_FINISH_FAILURE=Failed to complete suspending of VM ${VmName}.
USER_SUSPEND_VM_FINISH_FAILURE_WILL_TRY_AGAIN=Failed to complete suspending of VM ${VmName}, will try again.
USER_FAILED_SUSPEND_VM=Failed to suspend VM ${VmName} (Host: ${VdsName}).
AUTO_SUSPEND_VM=Automatically Suspending VM ${VmName} was initiated (Host: ${VdsName}).
AUTO_SUSPEND_VM_FINISH_SUCCESS=Automatically Suspending VM ${VmName} has completed.
AUTO_SUSPEND_VM_FINISH_FAILURE=Failed to complete automatically suspending of VM ${VmName}.
AUTO_FAILED_SUSPEND_VM=Failed to automatically suspend VM ${VmName} (Host: ${VdsName}).
USER_VDS_MAINTENANCE=Host ${VdsName} was switched to Maintenance mode by ${UserName}.
USER_VDS_MAINTENANCE_MIGRATION_FAILED=Host ${VdsName} cannot change into maintenance mode - not all Vms have been migrated successfully. Consider manual intervention: stopping/migrating Vms: ${failedVms} (User: ${UserName}).      
USER_EXPORT_VM=VM ${VmName} exported to ${ExportPath} by ${UserName}
USER_EXPORT_VM_FAILED=Failed to export VM ${VmName} to ${ExportPath} (User: ${UserName})
USER_EXPORT_TEMPLATE=Template ${VmTemplateName} exported to ${ExportPath} by ${UserName}
USER_EXPORT_TEMPLATE_FAILED=Failed to export Template ${VmTemplateName} to ${ExportPath} (User: ${UserName})
VM_IMPORT=Started VM import of ${ImportedVmName} (User: ${UserName})
VM_IMPORT_INFO=Value of field ${FieldName} of imported VM ${VmName} is  ${FieldValue}. The field is reset to the default value
VM_IMPORT_FAILED=Failed to import VM ${ImportedVmName} (User: ${UserName})
TEMPLATE_IMPORT=Started Template import of ${ImportedVmTemplateName} (User: ${UserName})
TEMPLATE_IMPORT_FAILED=Failed to import Template ${ImportedVmTemplateName} (User: ${UserName})
VM_NOT_RESPONDING=VM ${VmName} is not responding.
VM_PAUSED_ENOSPC=VM ${VmName} has paused due to no Storage space error.
VM_PAUSED_ERROR=VM ${VmName} has paused due to unknown storage error.
VM_PAUSED_EIO=VM ${VmName} has paused due to storage I/O problem.
VM_PAUSED_EPERM=VM ${VmName} has paused due to storage permissions problem.
IMAGES_SYNCRONIZER_DESKTOP_NOT_EXIST_IN_VDC=Storage Monitor Error: VM found in the system storage but not in the system database (Template: ${VmTemplateName}. Images: ${SnapshotDescription}).
IMAGES_SYNCRONIZER_SNAPSHOTS_NOT_ATTACHED_TO_VM_IN_VDC=Storage Monitor Error: VM snapshots found in the system storage without a base VM in the system database (Images: ${SnapshotDescription}).
IMAGES_SYNCRONIZER_SNAPSHOT_NOT_EXIST_IN_VDC=Storage Monitor Error: VM snapshots found in the system storage but not in the system database(VM: ${VmName}. Images: ${SnapshotDescription}).
IMAGES_SYNCRONIZER_TEMPLATE_NOT_EXIST_IMAGE_EXIST=Storage Monitor Error: Found an image based on a non existent template (Images: ${SnapshotDescription}).
IMAGES_SYNCRONIZER_TEMPLATE_NOT_EXIST_IN_VDC=Storage Monitor Error: Template found in the system storage but not in the system database (Images: ${SnapshotDescription}).
IMAGES_SYNCRONIZER_DESKTOP_NOT_EXIST_IN_IRS=Storage Monitor Error: VM found in the system database but not in the system storage (VM:${VmName}, snapshots: ${SnapshotDescription}).
IMAGES_SYNCRONIZER_DESKTOP_WITHOUT_TEMPLATE_VDC=Storage Monitor Error: No template found for VM ${VmName} in the system database (snapshots: ${SnapshotDescription}).
IMAGES_SYNCRONIZER_IMAGE_TEMPLATE_NOT_EXIST=Storage Monitor Error: VM Template ${VmTemplateName} cannot be found in the system storage
IMAGES_SYNCRONIZER_SNAPSHOT_NOT_EXIST_IN_IRS=Storage Monitor Error: VM ${VmName} snapshots cannot be found in the system storage (snapshots: ${SnapshotDescription}).
VDS_INSTALL=Host ${VdsName} installed
VDS_INSTALL_FAILED=Host ${VdsName} installation failed. ${FailedInstallMessage}.
VDS_INITIALIZING=Host ${VdsName} is initializing. Message: ${ErrorMessage}
VDS_INITIATED_RUN_VM=VM ${VmName} was restarted on Host ${VdsName}
VDS_INITIATED_RUN_VM_FAILED=Failed to restart VM ${VmName} on Host ${VdsName}
USER_ADD_VDS_GROUP=Host cluster ${VdsGroupName} was added by ${UserName}
USER_ADD_VDS_GROUP_FAILED=Failed to add Host cluster (User: ${UserName})
USER_REMOVE_VDS_GROUP=Host cluster ${VdsGroupName} was removed by ${UserName}
USER_REMOVE_VDS_GROUP_FAILED=Failed to remove Host cluster (User: ${UserName})
USER_UPDATE_VDS_GROUP=Host cluster ${VdsGroupName} was updated by ${UserName}
USER_UPDATE_VDS_GROUP_FAILED=Failed to update Host cluster (User: ${UserName})
SYSTEM_UPDATE_VDS_GROUP=Host cluster ${VdsGroupName} was updated by system
SYSTEM_UPDATE_VDS_GROUP_FAILED=Failed to update Host cluster by system
VDS_INSTALL_IN_PROGRESS=Installing Host ${VdsName}. ${Message}.
VDS_INSTALL_IN_PROGRESS_ERROR=Failed to install Host ${VdsName}. ${Message}.
VDS_INSTALL_IN_PROGRESS_WARNING=Host ${VdsName} installation in progress . ${Message}.
USER_UPDATE_VM_POOL_WITH_VMS=VM Pool ${VmPoolName} was updated by ${UserName}, ${VmsCount} VMs were added.
USER_UPDATE_VM_POOL_WITH_VMS_FAILED=Failed to update VM Pool ${VmPoolName}(User: ${UserName}). 
MAC_POOL_EMPTY=No MAC addresses left in the MAC Address Pool.
MAC_ADDRESS_IS_IN_USE=Import Vm ${VmName}: Mac Address ${MACAddr} is in use
USER_PASSWORD_CHANGED=Password changed successfully for ${UserName}
USER_PASSWORD_CHANGE_FAILED=Failed to change password. (User: ${UserName})
USER_CLEAR_UNKNOWN_VMS=All VMs' status on Non-Responsive Host ${VdsName} were changed to 'Down' by ${UserName}
USER_FAILED_CLEAR_UNKNOWN_VMS=Failed to clear VMs' status on Non-Responsive Host ${VdsName}. (User: ${UserName}).
CERTIFICATE_FILE_NOT_FOUND=Could not find oVirt Engine Certificate file.
VDS_RUN_IN_NO_KVM_MODE=Host ${VdsName} running without virtualization hardware acceleration
VDS_VERSION_NOT_SUPPORTED_FOR_CLUSTER=Host ${VdsName} is compatible with versions (${VdsSupportedVersions}) and cannot join Cluster ${VdsGroupName} which is set to version ${CompatibilityVersion}.
RUN_VM_FAILED=Cannot run VM ${VmName} on Host ${VdsName}. Error: ${ErrMsg}
USER_ADD_PERMISSION=User/Group ${SubjectName} was granted permission for Role ${RoleName} on ${VdcObjectType} ${VdcObjectName}, by ${UserName}.
USER_ADD_PERMISSION_FAILED=User ${UserName} failed to grant permission for Role ${RoleName} on ${VdcObjectType} ${VdcObjectName} to User/Group ${SubjectName}.
USER_REMOVE_PERMISSION=User/Group ${SubjectName} Role ${RoleName} permission was removed from ${VdcObjectType} ${VdcObjectName} by ${UserName}
USER_REMOVE_PERMISSION_FAILED=User ${UserName} failed to remove permission for Role ${RoleName} from ${VdcObjectType} ${VdcObjectName} to User/Group ${SubjectName}
USER_ADD_ROLE=Role ${RoleName} granted to ${UserName}
USER_ADD_ROLE_FAILED=Failed to grant role ${RoleName} (User ${UserName})
USER_REMOVE_ROLE=Role ${RoleName} removed from ${UserName}
USER_REMOVE_ROLE_FAILED=Failed to remove role ${RoleName} (User ${UserName})
USER_UPDATE_ROLE=${UserName} Role was updated to the ${RoleName} Role
USER_UPDATE_ROLE_FAILED=Failed to update role ${RoleName} to ${UserName}
USER_ATTACHED_ACTION_GROUP_TO_ROLE=Action group ${ActionGroup} was attached to Role ${RoleName} by ${UserName}
USER_ATTACHED_ACTION_GROUP_TO_ROLE_FAILED=Failed to attach Action group ${ActionGroup} to Role ${RoleName} (User: ${UserName})
USER_DETACHED_ACTION_GROUP_FROM_ROLE=Action group ${ActionGroup} was detached from Role ${RoleName} by ${UserName}
USER_DETACHED_ACTION_GROUP_FROM_ROLE_FAILED=Failed to attach Action group ${ActionGroup} to Role ${RoleName} by ${UserName}
VDS_REGISTER_ERROR_UPDATING_HOST=Host registration failed - cannot update Host Name for Host ${VdsName2}. (Host: ${VdsName1})
VDS_REGISTER_ERROR_UPDATING_HOST_ALL_TAKEN=Host registration failed - all available Host Names are taken. (Host: ${VdsName1})
VDS_REGISTER_HOST_IS_ACTIVE=Host registration failed - cannot change Host Name of active Host ${VdsName2}. (Host: ${VdsName1})
VDS_REGISTER_ERROR_UPDATING_NAME=Host registration failed - cannot update Host Name for Host ${VdsName2}. (Host: ${VdsName1})
VDS_REGISTER_ERROR_UPDATING_NAMES_ALL_TAKEN=Host registration failed - all available Host Names are taken. (Host: ${VdsName1})
VDS_REGISTER_NAME_IS_ACTIVE=Host registration failed - cannot change Host Name of active Host ${VdsName2}. (Host: ${VdsName1})
VDS_REGISTER_AUTO_APPROVE_PATTERN=Host registration failed - auto approve pattern error. (Host: ${VdsName1})
VDS_REGISTER_FAILED=Host registration failed. (Host: ${VdsName1})
VDS_REGISTER_EXISTING_VDS_UPDATE_FAILED=Host registration failed - cannot update existing Host. (Host: ${VdsName1})
VDS_REGISTER_SUCCEEDED=Host ${VdsName1} registered.
VM_MIGRATION_ON_CONNECT_CHECK_FAILED=VM migration logic failed. (VM name: ${VmName})
AD_COMPUTER_ACCOUNT_SUCCEEDED=Account creation successful.
AD_COMPUTER_ACCOUNT_FAILED=Account creation failed.
VDS_CPU_LOWER_THAN_CLUSTER=Host ${VdsName} moved to Non-Operational state as host does not meet the cluster's minimum CPU level. Missing CPU features : ${CpuFlags} 
CPU_FLAGS_NX_IS_MISSING=Host ${VdsName} is missing the NX cpu flag. This flag can be enabled via the host BIOS. Please set Disable Execute (XD) for an Intel host, or No Execute (NX) for AMD.  Please make sure to completely power off the host for this change to take effect.
VDS_CPU_RETRIEVE_FAILED=Failed to determine Host ${VdsName} CPU level - could not retrieve CPU flags.
VDS_STORAGE_CONNECTION_FAILED_BUT_LAST_VDS=Failed to connect Host ${VdsName} to Data Center, due to connectivity errors with the Storage. Host ${VdsName} will remain in Up state (but inactive), as it is the last Host in the Data Center, to enable manual intervention by the Administrator.
VDS_SET_NONOPERATIONAL=Host ${VdsName} moved to Non-Operational state.
VDS_SET_NONOPERATIONAL_FAILED=Failed to move Host ${VdsName} to Non-Operational state.
VDS_FENCE_STATUS=Host ${VdsName} power management was verified successfully.
VDS_FENCE_STATUS_FAILED=Failed to verify Host ${VdsName} power management.
VDS_APPROVE=Host ${VdsName} was successfully approved.
VDS_APPROVE_FAILED=Failed to approve Host ${VdsName}.
VM_MIGRATION_ON_CONNECT_CHECK_SUCCEEDED=Migration check failed to execute.
USER_VDS_SHUTDOWN=Host ${VdsName} was successfully shut down by ${UserName}.
USER_FAILED_VDS_SHUTDOWN=Failed to shutdown Host ${VdsName} (User: ${UserName}).
USER_DEDICATE_VM_TO_POWERCLIENT=VM ${VmName} set as dedicated for Power Client ${VdsName} by ${UserName}
USER_DEDICATE_VM_TO_POWERCLIENT_FAILED=Failed to set VM ${VmName} as dedicated for Power Client ${VdsName} (User: ${UserName})
NETWORK_ADD_BOND=Add bond: ${BondName} with interfaces: ${Interfaces} for Host: ${VdsName} by ${UserName}.
NETWORK_ADD_BOND_FAILED=Failed to add bond: ${BondName} with interfaces: ${Interfaces} for Host: ${VdsName} (User:${UserName}).
NETWORK_ATTACH_NETWORK_TO_VDS=Attach network: ${NetworkName} to Host: ${VdsName} by ${UserName}.
NETWORK_ATTACH_NETWORK_TO_VDS_FAILED=Failed to attach network: ${NetworkName} to Host: ${VdsName} (User: ${UserName}).
NETWORK_DETACH_NETWORK_FROM_VDS=Detach network: ${NetworkName} from Host: ${VdsName} by ${UserName}.
NETWORK_DETACH_NETWORK_FROM_VDS_FAILED=Failed to detach network: ${NetworkName} from Host: ${VdsName} (User: ${UserName}).
NETWORK_REMOVE_BOND=Remove bond: ${BondName} for Host: ${VdsName} (User:${UserName}).
NETWORK_REMOVE_BOND_FAILED=Failed to remove bond: ${BondName} for Host: ${VdsName} (User:${UserName}).
NETWORK_VDS_NETWORK_NOT_MATCH_CLUSTER=Vds ${VdsName} network does not match to cluster ${VdsGroupName}
NETWORK_VDS_NETWORK_MATCH_CLUSTER=Vds ${VdsName} network match to cluster ${VdsGroupName}
USER_ACTIVATED_STORAGE_DOMAIN=Storage Domain ${StorageDomainName} (Data Center ${StoragePoolName}) was activated by ${UserName}
RECOVERY_STORAGE_POOL=Data Center ${StoragePoolName} was recovered by ${UserName}
RECOVERY_STORAGE_POOL_FAILED=Failed to recover Data Center ${StoragePoolName}  (User:${UserName})
USER_ACTIVATE_STORAGE_DOMAIN_FAILED=Failed to activate Storage Domain ${StorageDomainName} (Data Center ${StoragePoolName}) by ${UserName}
USER_ADD_STORAGE_DOMAIN=Storage Domain ${StorageDomainName} was added by ${UserName}
USER_ADD_STORAGE_DOMAIN_FAILED=Failed to add Storage Domain ${StorageDomainName}. (User: ${UserName})
USER_ADD_STORAGE_POOL=Data Center ${StoragePoolName} was added by ${UserName}
USER_ADD_STORAGE_POOL_FAILED=Failed to add Data Center ${StoragePoolName}. (User: ${UserName})
USER_ATTACH_STORAGE_DOMAIN_TO_POOL=Storage Domain ${StorageDomainName} was attached to Data Center ${StoragePoolName} by ${UserName}
USER_ATTACH_STORAGE_DOMAIN_TO_POOL_FAILED=Failed to attach Storage Domain ${StorageDomainName} to Data Center ${StoragePoolName}. (User: ${UserName})
USER_DEACTIVATED_STORAGE_DOMAIN=Storage Domain ${StorageDomainName} (Data Center ${StoragePoolName}) was deactivated by ${UserName}
USER_DEACTIVATE_STORAGE_DOMAIN_FAILED=Failed to deactivate Storage Domain ${StorageDomainName} (Data Center ${StoragePoolName}). (User: ${UserName})
USER_DETACH_STORAGE_DOMAIN_FROM_POOL=Storage Domain ${StorageDomainName} was detached from Data Center ${StoragePoolName} by ${UserName}
USER_DETACH_STORAGE_DOMAIN_FROM_POOL_FAILED=Failed to detach Storage Domain ${StorageDomainName} to Data Center ${StoragePoolName}. (User: ${UserName})
USER_REMOVE_STORAGE_DOMAIN=Storage Domain ${StorageDomainName} was removed by ${UserName}
USER_REMOVE_STORAGE_DOMAIN_FAILED=Failed to remove Storage Domain ${StorageDomainName}. (User: ${UserName})
USER_FORCE_REMOVE_STORAGE_DOMAIN=Storage Domain ${StorageDomainName} was forcibly removed by ${UserName}
USER_FORCE_REMOVE_STORAGE_DOMAIN_FAILED=Failed to forcibly remove Storage Domain ${StorageDomainName}. (User: ${UserName})
USER_REMOVE_STORAGE_POOL=Data Center ${StoragePoolName} was removed by ${UserName}
USER_REMOVE_STORAGE_POOL_FAILED=Failed to remove Data Center ${StoragePoolName}. (User: ${UserName})
USER_UPDATE_STORAGE_DOMAIN=Storage Domain ${StorageDomainName} was updated by ${UserName}
USER_UPDATE_STORAGE_DOMAIN_FAILED=Failed to update Storage Domain ${StorageDomainName}. (User: ${UserName})
USER_UPDATE_STORAGE_POOL=Data Center ${StoragePoolName} was updated by ${UserName}
USER_UPDATE_STORAGE_POOL_FAILED=Failed to update Data Center ${StoragePoolName}. (User: ${UserName})
VDS_SET_NONOPERATIONAL_NETWORK=Host ${VdsName} does not comply with the cluster ${VdsGroupName} networks, the following networks are missing on host: '${Networks}' 
VDS_SET_NONOPERATIONAL_IFACE_DOWN=Host ${VdsName} moved to Non-Operational state because interfaces '${Interfaces}' are down which needed by networks '${Networks}' in the current cluster
NETWORK_ADD_NETWORK=Network ${NetworkName} was added to data center: ${StoragePoolName} 
NETWORK_ADD_NETWORK_FAILED=Failed to add Network ${NetworkName} to data center: ${StoragePoolName} 
NETWORK_ADD_TEMPLATE_INTERFACE=Interface ${InterfaceName} (${InterfaceType}) was added to Template ${VmTemplateName}. (User: ${UserName}) 
NETWORK_ADD_TEMPLATE_INTERFACE_FAILED=Failed to add Interface ${InterfaceName} (${InterfaceType}) to Template ${VmTemplateName}. (User: ${UserName})
NETWORK_ADD_VM_INTERFACE=Interface ${InterfaceName} (${InterfaceType}) was added to VM ${VmName}. (User: ${UserName})
NETWORK_ADD_VM_INTERFACE_FAILED=Failed to add Interface ${InterfaceName} (${InterfaceType}) to VM ${VmName}. (User: ${UserName})
NETWORK_ATTACH_NETWORK_TO_VDS_GROUP=Network ${NetworkName} attached to Cluster ${VdsGroupName}
NETWORK_ATTACH_NETWORK_TO_VDS_GROUP_FAILED=Failed to attach Network ${NetworkName} to Cluster ${VdsGroupName}
NETWORK_DETACH_NETWORK_TO_VDS_GROUP=Network ${NetworkName} detached from Cluster ${VdsGroupName}
NETWORK_DETACH_NETWORK_TO_VDS_GROUP_FAILED=Failed to detach Network ${NetworkName} from Cluster ${VdsGroupName}
NETWORK_REMOVE_NETWORK=Network ${NetworkName} was removed from data center: ${StoragePoolName}
NETWORK_REMOVE_NETWORK_FAILED=Failed to remove Network ${NetworkName} from data center: ${StoragePoolName}
NETWORK_REMOVE_TEMPLATE_INTERFACE=Interface ${InterfaceName} (${InterfaceType}) was removed from Template ${VmTemplateName}. (User: ${UserName})
NETWORK_REMOVE_TEMPLATE_INTERFACE_FAILED=Failed to remove Interface ${InterfaceName} (${InterfaceType}) from Template ${VmTemplateName}. (User: ${UserName})
NETWORK_REMOVE_VM_INTERFACE=Interface ${InterfaceName} (${InterfaceType}) was removed from VM ${VmName}. (User: ${UserName})
NETWORK_REMOVE_VM_INTERFACE_FAILED=Failed to remove Interface ${InterfaceName} (${InterfaceType}) from VM ${VmName}. (User: ${UserName})
NETWORK_UPDATE_DISPLAY_TO_VDS_GROUP=Update Display Network (${NetworkName}) for Cluster ${VdsGroupName}. (User: ${UserName})
NETWORK_UPDATE_DISPLAY_TO_VDS_GROUP_FAILED=Failed to update Display Network (${NetworkName}) for Cluster ${VdsGroupName}. (User: ${UserName})
NETWORK_UPDATE_NETWORK_TO_VDS_INTERFACE=Update Network ${NetworkName} in Host ${VdsName}. (User: ${UserName})
NETWORK_UPDATE_NETWORK_TO_VDS_INTERFACE_FAILED=Failed to update Network ${NetworkName} in Host ${VdsName}. (User: ${UserName})
NETWORK_UPDATE_TEMPLATE_INTERFACE=Interface ${InterfaceName} (${InterfaceType}) was updated for Template ${VmTemplateName}. (User: ${UserName})
NETWORK_UPDATE_TEMPLATE_INTERFACE_FAILED=Failed to update Interface ${InterfaceName} (${InterfaceType}) for Template ${VmTemplateName}. (User: ${UserName})
NETWORK_UPDATE_VM_INTERFACE=Interface ${InterfaceName} (${InterfaceType}) was updated for VM ${VmName}. (User: ${UserName})
NETWORK_UPDATE_VM_INTERFACE_FAILED=Failed to update Interface ${InterfaceName} (${InterfaceType}) for VM ${VmName}. (User: ${UserName})
NETWORK_HOST_USING_WRONG_CLUSER_VLAN=${VdsName} is having wrong vlan id: ${VlanIdHost}, expected vlan id: ${VlanIdCluster}
NETWORK_HOST_MISSING_CLUSER_VLAN=${VdsName} is missing vlan id: ${VlanIdCluster} that is expected by the cluster
SYSTEM_DEACTIVATED_STORAGE_DOMAIN=Storage Domain ${StorageDomainName} (Data Center ${StoragePoolName}) was deactivated by system because it's not visible by any of the hosts. 
SYSTEM_DEACTIVATE_STORAGE_DOMAIN_FAILED=Failed to deactivate Storage Domain ${StorageDomainName} (Data Center ${StoragePoolName}). 
VDS_SET_NONOPERATIONAL_DOMAIN=Host ${VdsName} cannot access one of the Storage Domains attached to it, or the Data Center object. Setting Host state to Non-Operational.									 
VDS_SET_NONOPERATIONAL_DOMAIN_FAILED=Host ${VdsName} cannot access one of the Storage Domains attached to it, or the Data Center object. Failed to set Host state to Non-Operational.
VDS_DOMAIN_DELAY_INTERVAL=Storage domain ${StorageDomainName} experienced a high latency of ${Delay} seconds from host ${VdsName}. This may cause performance and functional issues. Please consult your Storage Administrator.
USER_EXTENDED_STORAGE_DOMAIN=Storage ${StorageDomainName} was Extended by ${UserName}
USER_EXTENDED_STORAGE_DOMAIN_FAILED=Failed to extend Storage Domain ${StorageDomainName}. (User: ${UserName})
USER_CONNECT_HOSTS_TO_LUN_FAILED=Failed to connect Host ${VdsName} to device. (User: ${UserName})
USER_REMOVE_VG=Volume group ${VgId} was removed by ${UserName}.
USER_REMOVE_VG_FAILED=Failed to remove Volume group ${VgId}. (User: UserName)
USER_ACTIVATE_STORAGE_POOL=Data Center ${StoragePoolName} was activated. (User: ${UserName})
USER_ACTIVATE_STORAGE_POOL_FAILED=Failed to activate Data Center ${StoragePoolName}. (User: ${UserName})
SYSTEM_FAILED_CHANGE_STORAGE_POOL_STATUS=Failed to change Data Center ${StoragePoolName} status.
SYSTEM_CHANGE_STORAGE_POOL_STATUS_NO_HOST_FOR_SPM=Failed to elect Host as Storage Pool Manager for Data Center ${StoragePoolName}. Setting status to Non-Operational.
SYSTEM_CHANGE_STORAGE_POOL_STATUS_PROBLEMATIC=Invalid status on Data Center ${StoragePoolName}. Setting status to Non-Responsive.
SYSTEM_CHANGE_STORAGE_POOL_STATUS_RESET_IRS=Data Center ${StoragePoolName} was reset. Setting status to Non-Responsive (Elect new Storage Pool Manager).
SYSTEM_CHANGE_STORAGE_POOL_STATUS_PROBLEMATIC_FROM_NON_OPERATIONAL=Try to recover Data Center ${StoragePoolName}. Setting status to Non-Responsive.
SYSTEM_CHANGE_STORAGE_POOL_STATUS_PROBLEMATIC_SEARCHING_NEW_SPM=Data Center is being initialized, please wait for initialization to complete.
SYSTEM_CHANGE_STORAGE_POOL_STATUS_PROBLEMATIC_WITH_ERROR=Invalid status on Data Center ${StoragePoolName}. Setting Data Center status to Non-Responsive (On host ${VdsName}, Error: ${Error}).
USER_CHANGE_FLOPPY_VM=Floppy ${DiskName} was inserted in VM ${VmName} by ${UserName}
USER_EJECT_VM_FLOPPY=Floppy was ejected from VM ${VmName} by ${UserName}
USER_FAILED_CHANGE_FLOPPY_VM=Failed to change floppy ${DiskName} (User: ${UserName}).
VM_DOWN_ERROR=VM ${VmName} is down. Exit message ${ExitMessage}.
NETWORK_COMMINT_NETWORK_CHANGES=Network changes were saved on host ${VdsName}
NETWORK_COMMINT_NETWORK_CHANGES_FAILED=Failed to commit network changes on ${VdsName}
SYSTEM_VDS_RESTART=Host ${VdsName} was restarted.
SYSTEM_FAILED_VDS_RESTART=Failed to restart Host ${VdsName}.
RECONSTRUCT_MASTER_FAILED_NO_MASTER=No valid Data Storage Domains are available in Data Center ${StoragePoolName} (please check your storage infrastructure).
RECONSTRUCT_MASTER_DONE=Reconstruct Master Domain for Data Center ${StoragePoolName} completed.
RECONSTRUCT_MASTER_FAILED=Failed to Reconstruct Master Domain for Data Center ${StoragePoolName}.
IMPORTEXPORT_STARTING_EXPORT_VM=Starting export Vm ${VmName} to ${StorageDomainName}
IMPORTEXPORT_EXPORT_VM=Vm ${VmName} was exported successfully to ${StorageDomainName}
IMPORTEXPORT_EXPORT_VM_FAILED=Failed to export Vm ${VmName} to ${StorageDomainName}
IMPORTEXPORT_STARTING_IMPORT_VM=Starting to import Vm ${VmName} to ${StorageDomainName}
IMPORTEXPORT_IMPORT_VM=Vm ${VmName} was imported successfully to ${StorageDomainName}
IMPORTEXPORT_IMPORT_VM_FAILED=Failed to import Vm ${VmName} to ${StorageDomainName}
IMPORTEXPORT_STARTING_EXPORT_TEMPLATE=Starting to export Template ${VmTemplateName} to ${StorageDomainName}
IMPORTEXPORT_EXPORT_TEMPLATE=Template ${VmTemplateName} was exported successfully to ${StorageDomainName}
IMPORTEXPORT_EXPORT_TEMPLATE_FAILED=Failed to export Template ${VmTemplateName} to ${StorageDomainName}
IMPORTEXPORT_STARTING_IMPORT_TEMPLATE=Starting to import Template ${VmTemplateName} to ${StorageDomainName}
IMPORTEXPORT_IMPORT_TEMPLATE=Template ${VmTemplateName} was imported successfully to ${StorageDomainName}
IMPORTEXPORT_IMPORT_TEMPLATE_FAILED=Failed to import Template ${VmTemplateName} to ${StorageDomainName}
IMPORTEXPORT_STARTING_REMOVE_TEMPLATE=Starting to remove Template ${VmTemplateName} remove ${StorageDomainName}
IMPORTEXPORT_REMOVE_TEMPLATE=Template ${VmTemplateName} was removed from ${StorageDomainName}
IMPORTEXPORT_REMOVE_TEMPLATE_FAILED=Failed to remove Template ${VmTemplateName} remove from StorageDomainName
IMPORTEXPORT_STARTING_REMOVE_VM=Starting to remove Vm ${VmName} remove from ${StorageDomainName}
IMPORTEXPORT_REMOVE_VM=Vm ${VmName} was removed from ${StorageDomainName}
IMPORTEXPORT_REMOVE_VM_FAILED=Failed to remove Vm ${VmName} remove from ${StorageDomainName}
USER_ADD_ROLE_WITH_ACTION_GROUP=Role ${RoleName} was added by ${UserName}
USER_ADD_ROLE_WITH_ACTION_GROUP_FAILED=Failed to add role ${RoleName}
VDS_ALERT_FENCING_IS_NOT_CONFIGURED=Power Management is not configured for Host ${VdsName}.
VDS_ALERT_FENCING_TEST_FAILED=Power Management test failed for Host ${VdsName}.${Reason}
VDS_ALERT_FENCING_OPERATION_FAILED=Power Management operation ${Operation} failed on Host ${VdsName}.
VDS_ALERT_FENCING_OPERATION_SKIPPED=Power Management ${Operation} operation skipped on Host ${VdsName} because it is not configured.
VDS_ALERT_FENCING_NO_PROXY_HOST=There is no other host in the data center that can be used to test the power management settings.
VDS_ALERT_FENCING_STATUS_VERIFICATION_FAILED=Failed to verify Host ${Host} ${Status} status, Please ${Status} Host ${Host} manually.
TASK_STOPPING_ASYNC_TASK=Stopping async task ${CommandName} that started at ${Date}
REFRESH_REPOSITORY_FILE_LIST_FAILED=Failed to refresh the following Iso domains :${isoDomains}. Please check domain activity.
REFRESH_REPOSITORY_FILE_LIST_SUCCEEDED=Succeeded to refresh Iso domain : ${isoDomains}
TASK_CLEARING_ASYNC_TASK=Clearing asynchronous task ${CommandName} that started at ${Date}
VM_WAS_SET_DOWN_DUE_TO_HOST_REBOOT_OR_MANUAL_FENCE=Vm ${VmName} was shut down due to ${VdsName} host reboot or manual fence
UPDATE_TAGS_VM_DEFAULT_DISPLAY_TYPE=Vm ${VmName} tag default display type was updated
UPDATE_TAGS_VM_DEFAULT_DISPLAY_TYPE_FAILED=Failed to update Vm ${VmName} tag default display type
CONNECT_STORAGE_SERVERS_FAILED=Failed to connect Host ${VdsName} to Storage Servers
CONNECT_STORAGE_POOL_FAILED=Failed to connect Host ${VdsName} to Storage Pool ${StoragePoolName}
STORAGE_DOMAIN_ERROR=The error code for connection ${Connection} returned by VDSM was following ${ErrorCode}
VDS_LOW_MEM=Available memory of host ${HostName} [${AvailableMemory} MB] is under defined threshold [${Threshold} MB].  
IMPORTEXPORT_FAILED_TO_IMPORT_VM=Failed to read VM '${ImportedVmName}' OVF, it may be corrupted
IMPORTEXPORT_FAILED_TO_IMPORT_TEMPLATE=Failed to read Template '${Template}' OVF, it may be corrupted
CANNOT_HIBERNATE_RUNNING_VMS_AFTER_CLUSTER_CPU_UPGRADE=Hibernation of VMs after CPU upgrade of Cluster ${VdsGroup} is not supported. Please stop and restart those VMs in case you wish to hibernate them
STORAGE_ALERT_VG_METADATA_CRITICALLY_FULL=The system has reached the 80% watermark on the VG metadata area size on ${StorageDomainName}.\nThis is due to a high number of Vdisks or large Vdisks size allocated on this specific VG.\nPlease call Redhat Global Support to address the issue.
STORAGE_ALERT_SMALL_VG_METADATA=The allocated VG metadata area size is smaller than 50MB on ${StorageDomainName},\nwhich might limit its capacity (the number of Vdisks and/or their size).\nPlease refer to the GSS knowledge base to understand the issue and how to resolve it.
GLUSTER_VOLUME_CREATE=Gluster Volume ${glusterVolumeName} was created.
GLUSTER_VOLUME_CREATE_FAILED=Creation of Gluster Volume ${glusterVolumeName} failed.
GLUSTER_VOLUME_START=Gluster Volume ${glusterVolumeName} was started.
GLUSTER_VOLUME_START_FAILED=Gluster Volume ${glusterVolumeName} could not be started.
GLUSTER_VOLUME_STOP=Gluster Volume ${glusterVolumeName} was stopped.
GLUSTER_VOLUME_STOP_FAILED=Gluster Volume ${glusterVolumeName} could not be stopped.
GLUSTER_VOLUME_DELETE=Gluster Volume ${glusterVolumeName} was deleted.
GLUSTER_VOLUME_DELETE_FAILED=Gluster Volume ${glusterVolumeName} could not be deleted.

